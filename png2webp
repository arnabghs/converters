#!/bin/bash

# Check if both input folder and architecture are provided
if [ -z "$1" ] || [ -z "$2" ]; then
    echo "‚ùå Usage: $0 <folder_path> <arch>"
    echo "   arch can be 'x86' or 'ARM'"
    exit 1
fi

INPUT_FOLDER="$1"
ARCH="$2"

# Validate architecture
if [ "$ARCH" != "x86" ] && [ "$ARCH" != "ARM" ]; then
    echo "‚ùå Error: Architecture must be either 'x86' or 'ARM'"
    exit 1
fi

# Check if folder exists
if [ ! -d "$INPUT_FOLDER" ]; then
    echo "‚ùå Error: Folder '$INPUT_FOLDER' does not exist."
    exit 1
fi

# Set output folder
OUTPUT_FOLDER="${INPUT_FOLDER%/}/output_webp"

# Create output folder if it doesn't exist
mkdir -p "$OUTPUT_FOLDER"

# Convert each PNG file in the input folder
for file in "$INPUT_FOLDER"/*.png; do
    # Skip if no PNG files found
    [ -e "$file" ] || { echo "‚ö†Ô∏è No PNG files found in $INPUT_FOLDER."; exit 0; }

    # Get the filename without extension
    filename=$(basename "$file" .png)

    # Set the appropriate libwebp path based on architecture
    if [ "$ARCH" = "x86" ]; then
        WEBP_PATH="x86/image/libwebp-1.5.0-mac-x86-64/bin/cwebp"
    else
        WEBP_PATH="ARM/image/libwebp-1.6.0-mac-arm64/bin/cwebp"
    fi

    # Convert to WEBP
    "$WEBP_PATH" "$file" -o "$OUTPUT_FOLDER/$filename.webp"
    echo "‚úÖ Converted: $file ‚Üí $OUTPUT_FOLDER/$filename.webp"
done

echo "üéâ All images converted and saved in: $OUTPUT_FOLDER"
